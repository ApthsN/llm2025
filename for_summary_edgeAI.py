import pdfplumber
import docx
from transformers import pipeline

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô PDF
def read_pdf_text(file_path):
    text = ""
    with pdfplumber.open(file_path) as pdf:
        for page in pdf.pages:
            content = page.extract_text()
            if content:
                text += content + "\n"
    return text

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô DOCX
def read_docx_text(file_path):
    doc = docx.Document(file_path)
    return "\n".join([para.text for para in doc.paragraphs])

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (chunk)
def split_text(text, max_chunk_length=1000):
    paragraphs = text.split("\n")
    chunks, current_chunk = [], ""
    for para in paragraphs:
        if len(current_chunk) + len(para) < max_chunk_length:
            current_chunk += para + " "
        else:
            chunks.append(current_chunk.strip())
            current_chunk = para + " "
    chunks.append(current_chunk.strip())
    return chunks

# ---------- CONFIG ----------
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå
file_path = "EdgeAI_en.pdf"  # ‡∏´‡∏£‡∏∑‡∏≠ "document.docx"

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

# ---------- LOAD DOCUMENT ----------
if file_path.endswith(".pdf"):
    document_text = read_pdf_text(file_path)
elif file_path.endswith(".docx"):
    document_text = read_docx_text(file_path)
else:
    raise ValueError("‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ .pdf ‡πÅ‡∏•‡∏∞ .docx")

chunks = split_text(document_text)

# ---------- ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ ----------
print("üìÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")
final_summary = ""
for i, chunk in enumerate(chunks):
    if len(chunk.strip()) < 50:
        continue  # ‡∏Ç‡πâ‡∏≤‡∏° chunk ‡∏ó‡∏µ‡πà‡∏™‡∏±‡πâ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
    summary = summarizer(chunk, max_length=200, min_length=30, do_sample=False)[0]['summary_text']
    final_summary += f"{summary}\n\n"

# ---------- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ----------
print("\n‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:\n")
print(final_summary)

# ---------- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ----------
with open("summary_output.txt", "w", encoding="utf-8") as f:
    f.write(final_summary)
